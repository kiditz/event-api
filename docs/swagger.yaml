basePath: /api/v1
definitions:
  entity.Campaign:
    properties:
      criteria:
        type: string
      detail:
        type: string
      end_date:
        type: string
      end_price:
        type: number
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/entity.Image'
        type: array
      location:
        $ref: '#/definitions/entity.Location'
        type: object
      location_id:
        type: integer
      method:
        type: string
      sample_product:
        type: string
      social_media:
        items:
          $ref: '#/definitions/entity.SocialMedia'
        type: array
      staff_amount:
        type: integer
      start_date:
        type: string
      start_price:
        type: number
      status:
        type: string
      task:
        type: string
      title:
        type: string
    required:
    - criteria
    - detail
    - end_date
    - end_price
    - method
    - social_media
    - staff_amount
    - start_date
    - start_price
    - task
    - title
    type: object
  entity.DigitalStaff:
    properties:
      followers:
        type: string
      id:
        type: integer
      image:
        type: string
      subtitle:
        type: string
      title:
        type: string
    required:
    - image
    - subtitle
    - title
    type: object
  entity.Document:
    properties:
      filename:
        type: string
      id:
        type: integer
      message:
        type: string
      size:
        type: integer
      url:
        type: string
    type: object
  entity.EventStaff:
    properties:
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  entity.Image:
    properties:
      id:
        type: integer
      image_url:
        type: string
    required:
    - image_url
    type: object
  entity.Location:
    properties:
      address:
        type: string
      formatted_address:
        type: string
      icon:
        type: string
      id:
        type: integer
      international_phone_number:
        type: string
      lat:
        type: number
      lng:
        type: number
      phone_number:
        type: string
      place_id:
        type: string
    required:
    - formatted_address
    - lat
    - lng
    type: object
  entity.SocialMedia:
    properties:
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - name
    type: object
  entity.User:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      type:
        type: string
    required:
    - email
    - name
    - password
    - type
    type: object
  translate.ResultErrors:
    properties:
      message:
        example: Dynamic message
        type: string
      status:
        example: Bad Request
        type: string
      status_code:
        example: 400
        type: integer
    type: object
  translate.ResultSuccess:
    properties:
      data:
        type: object
      status:
        example: OK
        type: string
      status_code:
        example: 200
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is event staffing application management
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Spgku Application
  version: "1.0"
paths:
  /auth/token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Sign in by using email and password
      parameters:
      - description: your account email
        in: query
        name: email
        required: true
        type: string
      - description: your account password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.Campaign'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/translate.ResultErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: Sign In
      tags:
      - users
  /campaigns:
    post:
      description: Create a new campaign
      parameters:
      - description: New Campaign
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/entity.Campaign'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.Campaign'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      security:
      - ApiKeyAuth: []
      summary: AddCampaign api used to create new campaign
      tags:
      - campaigns
  /campaigns/{id}:
    get:
      consumes:
      - application/json
      description: find campaign by id
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/translate.ResultSuccess'
              - properties:
                  data:
                    $ref: '#/definitions/entity.Campaign'
                type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      security:
      - ApiKeyAuth: []
      summary: FindcampaignById used to find campaign by it's primary key
      tags:
      - campaigns
  /campaigns/date:
    get:
      consumes:
      - application/json
      description: find campaign by date
      parameters:
      - description: Date to search
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/translate.ResultSuccess'
              - properties:
                  data:
                    $ref: '#/definitions/entity.Campaign'
                type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      security:
      - ApiKeyAuth: []
      summary: GetCampaignByDate used to find campaign by it's start date and end date
      tags:
      - campaigns
  /campaigns/documents:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      parameters:
      - description: campaign image
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.Document'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/translate.ResultErrors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      security:
      - ApiKeyAuth: []
      summary: Upload documents
      tags:
      - campaigns
  /campaigns/social-media:
    get:
      consumes:
      - application/json
      description: find campaign by date
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/translate.ResultSuccess'
              - properties:
                  data:
                    $ref: '#/definitions/entity.SocialMedia'
                type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      security:
      - ApiKeyAuth: []
      summary: GetAllSocialMedia used to find all social media list
      tags:
      - campaigns
  /digital-staffs:
    get:
      consumes:
      - application/json
      description: Create a new digital staff category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.DigitalStaff'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: GetDigitalStaff used to categories help digital staff
      tags:
      - staff
    post:
      consumes:
      - application/json
      description: Create a new digital staff category
      parameters:
      - description: New DigitalStaff
        in: body
        name: digitallStaff
        required: true
        schema:
          $ref: '#/definitions/entity.DigitalStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.DigitalStaff'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: AddDigitalStaff Add new digital staf
      tags:
      - staff
  /event-staffs:
    get:
      consumes:
      - application/json
      description: Get all data of event staff
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.EventStaff'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: GetEventStaff used to categories help event staff
      tags:
      - staff
    post:
      consumes:
      - application/json
      description: Create a new digital staff category
      parameters:
      - description: New Event Staff
        in: body
        name: eventStaff
        required: true
        schema:
          $ref: '#/definitions/entity.EventStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.EventStaff'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: AddEventStaff used to add new event staff
      tags:
      - staff
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/translate.ResultSuccess'
            - properties:
                data:
                  $ref: '#/definitions/entity.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/translate.ResultErrors'
      summary: AddUser api used to signup
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
