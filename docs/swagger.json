{
    "swagger": "2.0",
    "info": {
        "description": "This is event staffing application management",
        "title": "Spgku Application",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/account": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "FindUserByLoggedIn api used to find user by token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "Sign in by using email and password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "type": "string",
                        "description": "your account email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "your account password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find campaign by date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "GetCampaigns used to find campaign by specific params",
                "parameters": [
                    {
                        "type": "string",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "onlyme",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Campaign"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "AddCampaign api used to create new campaign",
                "parameters": [
                    {
                        "description": "New Campaign",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Campaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/campaigns/documents": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Upload documents",
                "parameters": [
                    {
                        "type": "file",
                        "description": "campaign image",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Document"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns/info/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "used to find campaign information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "GetCampaignInfo used to find campaign information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.CampaignInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns/payment-days": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find all payment days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "GetPaymentDays used to find all payment days list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.PaymentDays"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns/payment-terms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find all payment terms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "GetPaymentTerms used to find all payment terms list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.PaymentTerms"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns/social-media": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find campaign by date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "GetAllSocialMedia used to find all social media list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.SocialMedia"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find campaign by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "FindcampaignById used to find campaign by it's primary key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Campaign"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/cart": {
            "post": {
                "description": "add to cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "AddCart api used to create new cart for specific email address",
                "parameters": [
                    {
                        "description": "Add To Cart",
                        "name": "talent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Cart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Cart"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            },
            "delete": {
                "description": "add to cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "DeleteCart api used to delete cart for specific device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Cart"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "description": "find carts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "GetCarts api used to find cart for specific device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Cart"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find all category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "GetCategories used to find all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/translate.ResultSuccess"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/entity.Category"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/company": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find company logged in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "FindCompany used to find company logged in",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Company"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Edit company",
                "parameters": [
                    {
                        "description": "Company Data",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Company"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/expertises": {
            "get": {
                "description": "used to find all expertises",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "GetExpertises used to find all expertises",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/translate.ResultSuccess"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/entity.Expertise"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/invitation": {
            "post": {
                "description": "create new invitation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "AddInvitation api used to create new invitation for talent service",
                "parameters": [
                    {
                        "description": "Invitation",
                        "name": "talent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Invitation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Invitation"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/invitation/accept": {
            "post": {
                "description": "accept invitation and generate quote",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "AcceptInvitation api used to accept invitation and generate quote",
                "parameters": [
                    {
                        "description": "Quotation",
                        "name": "quotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Quotation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Quotation"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/invitation/reject": {
            "post": {
                "description": "reject invitation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "RejectInvitation api used to reject invitation",
                "parameters": [
                    {
                        "description": "RejectInvitation",
                        "name": "quotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RejectInvitation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Invitation"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/invitations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find invitations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "GetInvitations api used to invitations by user logged in",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.Invitation"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/order/charge": {
            "post": {
                "description": "add new order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "AddOrder api used to add order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Order"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/quotation/approved": {
            "post": {
                "description": "approve quotation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "ApproveQuotation api used to approve quotation",
                "parameters": [
                    {
                        "description": "QuotationIdentity",
                        "name": "quotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QuotationIdentity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.QuotationIdentity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/quotation/declined": {
            "post": {
                "description": "decline quotation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "DeclineQuotation api used to decline quotation",
                "parameters": [
                    {
                        "description": "QuotationIdentity",
                        "name": "quotation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QuotationIdentity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.QuotationIdentity"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/quotations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get quotations by campaign id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "GetQuotations get quotations by campaign id",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "campaign_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.QuotationList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/sub-categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find all sub category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "GetSubCategories used to find all sub category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/translate.ResultSuccess"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/entity.SubCategory"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/sub-categories/{id}": {
            "get": {
                "description": "used to find all sub category by category id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "GetSubCategoriesByCategoryID used to find all sub category by category id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/translate.ResultSuccess"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/entity.SubCategory"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/talent": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find talent login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "FindTalentByLogin used to find talent login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Talent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new talent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "AddTalent api used to create new talent",
                "parameters": [
                    {
                        "description": "New Talent",
                        "name": "talent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Talent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Talent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/talent/service": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "AddService api used to create new service for talent",
                "parameters": [
                    {
                        "description": "New Service for talent",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Service"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/talent/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find talent by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "FindtalentById used to find talent by it's primary key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Talent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Talent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/talents": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "find talents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "GetTalents is api to find talents by params",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "campaign_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "expertise_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "sub_category_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.Talent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        },
        "/user": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "EditUser api used to edit profile",
                "parameters": [
                    {
                        "description": "Edit User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "AddUser api used to signup",
                "parameters": [
                    {
                        "description": "New User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/translate.ResultSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/translate.ResultErrors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Campaign": {
            "type": "object",
            "required": [
                "currency",
                "detail",
                "end_price",
                "staff_amount",
                "start_price",
                "title"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "company": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Location"
                },
                "location_id": {
                    "type": "integer"
                },
                "payment_days": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PaymentDays"
                },
                "payment_days_id": {
                    "type": "integer"
                },
                "payment_terms": {
                    "type": "object",
                    "$ref": "#/definitions/entity.PaymentTerms"
                },
                "payment_terms_id": {
                    "type": "integer"
                },
                "staff_amount": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "start_price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "sub_category_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.CampaignInfo": {
            "type": "object",
            "properties": {
                "approved_count": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quotation_count": {
                    "type": "integer"
                },
                "staff_amount": {
                    "type": "integer"
                }
            }
        },
        "entity.Cart": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_version": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "service_id": {
                    "type": "integer"
                },
                "talent_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Category": {
            "type": "object",
            "properties": {
                "is_searchable": {
                    "type": "boolean"
                },
                "is_usable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "sub_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SubCategory"
                    }
                }
            }
        },
        "entity.Company": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "background_image": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Image"
                },
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Category"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Image"
                },
                "is_updated": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "sub_category": {
                    "type": "object",
                    "$ref": "#/definitions/entity.SubCategory"
                },
                "sub_category_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Document": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.Expertise": {
            "type": "object",
            "properties": {
                "is_searchable": {
                    "type": "boolean"
                },
                "is_usable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "entity.FilteredQuotations": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.FilteredTalent": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "expertise_name": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                },
                "sub_category_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Image": {
            "type": "object",
            "required": [
                "image_url"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                }
            }
        },
        "entity.Invitation": {
            "type": "object",
            "required": [
                "campaign_id",
                "service_id"
            ],
            "properties": {
                "campaign": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Campaign"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "service": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Service"
                },
                "service_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.ItemDetails": {
            "type": "object",
            "required": [
                "name",
                "price",
                "quantity"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "merchant_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.LimitOffset": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "entity.Location": {
            "type": "object",
            "required": [
                "formatted_address",
                "lat",
                "lng"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "formatted_address": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "international_phone_number": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                }
            }
        },
        "entity.Order": {
            "type": "object",
            "required": [
                "campaign_id",
                "id_user"
            ],
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "custom_field1": {
                    "type": "string"
                },
                "custom_field2": {
                    "type": "string"
                },
                "custom_field3": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_user": {
                    "type": "integer"
                },
                "item_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ItemDetails"
                    }
                },
                "redirect_url": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "transaction_detail_id": {
                    "type": "integer"
                },
                "transaction_details": {
                    "type": "object",
                    "$ref": "#/definitions/entity.TransactionDetails"
                },
                "transaction_status": {
                    "type": "string"
                },
                "transaction_time": {
                    "type": "string"
                }
            }
        },
        "entity.PaymentDays": {
            "type": "object",
            "required": [
                "days"
            ],
            "properties": {
                "days": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "entity.PaymentTerms": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "entity.Quotation": {
            "type": "object",
            "required": [
                "campaign_id",
                "message",
                "price",
                "service_id",
                "status"
            ],
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "invitation_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "service_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.QuotationIdentity": {
            "type": "object",
            "properties": {
                "quotation_id": {
                    "type": "integer"
                }
            }
        },
        "entity.QuotationList": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "service_category": {
                    "type": "string"
                },
                "service_image_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.RejectInvitation": {
            "type": "object",
            "properties": {
                "invitation_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Service": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "portfolios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Image"
                    }
                },
                "start_price": {
                    "type": "number"
                },
                "sub_category_id": {
                    "type": "integer"
                },
                "talent_id": {
                    "type": "integer"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Expertise"
                    }
                }
            }
        },
        "entity.SocialMedia": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.SubCategory": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "is_searchable": {
                    "type": "boolean"
                },
                "is_usable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "entity.Talent": {
            "type": "object",
            "required": [
                "birth_date",
                "gender",
                "height",
                "instagram_link"
            ],
            "properties": {
                "background": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Image"
                },
                "background_image_id": {
                    "type": "integer"
                },
                "birth_date": {
                    "type": "string"
                },
                "business_type_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "engagement": {
                    "type": "number"
                },
                "expertises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Expertise"
                    }
                },
                "facebook_followers_count": {
                    "type": "integer"
                },
                "facebook_link": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Image"
                },
                "instagram_followers_count": {
                    "type": "integer"
                },
                "instagram_link": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "location": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Location"
                },
                "location_id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "twitter_followers_count": {
                    "type": "integer"
                },
                "twitter_link": {
                    "type": "string"
                },
                "youtube_followers_count": {
                    "type": "integer"
                },
                "youtube_link": {
                    "type": "string"
                }
            }
        },
        "entity.TransactionDetails": {
            "type": "object",
            "properties": {
                "billing": {
                    "type": "number"
                },
                "down_payment": {
                    "type": "number"
                },
                "gross_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "required": [
                "currency",
                "email",
                "language",
                "name",
                "type"
            ],
            "properties": {
                "background_image_url": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.UserForm": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "repository.CampaignsFilter": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "onlyme": {
                    "type": "boolean"
                },
                "q": {
                    "type": "string"
                }
            }
        },
        "translate.ResultErrors": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Dynamic message"
                },
                "status": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "translate.ResultSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}